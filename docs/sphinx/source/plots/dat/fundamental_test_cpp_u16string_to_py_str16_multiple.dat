# Unicode string performance, Python to C++. Mac Mini B:
# 2 October 2024 at 12:56:27 BST
# From perf_notes/cpp_test_results.txt
# Fundamental types:
# 16 bit
# ======
#
# C++ -> Python
# -------------
# HEAD: Fail   Scale  Repeat         Mean(s)     Std.Dev.(s)         Min.(s)         Max.(s)     Count      Rate(/s) Name
# $1      $2      $3      $4              $5              $6              $7              $8        $9           $10 $11
TEST:    0       2   1000000     0.042588886     0.001377939     0.040422959     0.043991375        20         469.6 test_cpp_u16string_to_py_str16_multiple_2[1000000]
TEST:    0      16   1000000     0.147994407     0.009139400     0.138898917     0.164160334        20         135.1 test_cpp_u16string_to_py_str16_multiple_16[1000000]
TEST:    0     128   1000000     0.873698398     0.009309133     0.854021875     0.887453251        20          22.9 test_cpp_u16string_to_py_str16_multiple_128[1000000]
TEST:    0    1024   1000000     6.716434430     0.026116913     6.675454917     6.768655084        20           3.0 test_cpp_u16string_to_py_str16_multiple_1024[1000000]
TEST:    0    8182   1000000    63.329128475     7.383649449    53.119942417    82.049977584        20           0.3 test_cpp_u16string_to_py_str16_multiple_8192[1000000]
TEST:    0   65536   1000000   434.770099001    15.165859601   423.448348083   486.720068750        20           0.0 test_cpp_u16string_to_py_str16_multiple_65536[1000000]
#
# NOTES:
# - The C++ to Python is seriously bad. This is calling Python_Cpp_Containers::cpp_u16string_to_py_unicode16()
    which calls PyUnicode_New() and PyUnicode_WriteChar() in a loop.
