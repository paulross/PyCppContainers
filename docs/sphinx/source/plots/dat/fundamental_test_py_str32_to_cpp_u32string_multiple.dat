# Unicode string performance, Python to C++. Mac Mini B:
# 2 October 2024 at 12:56:27 BST
# From perf_notes/cpp_test_results.txt
# Fundamental types:
# 32 bit
# ======
#
# Python -> C++
# -------------
# HEAD: Fail   Scale  Repeat            Mean(s)     Std.Dev.(s)         Min.(s)         Max.(s)     Count      Rate(/s) Name
# $1      $2      $3      $4                 $5              $6              $7              $8        $9           $10 $11
TEST:    0         2    1000000   0.007344234     0.000049091     0.007326501     0.007543208        20        2723.2 test_py_str32_to_cpp_u32string_multiple_2[1000000]
TEST:    0        16    1000000   0.077141528     0.006414912     0.071097542     0.095550751        20         259.3 test_py_str32_to_cpp_u32string_multiple_32[1000000]
TEST:    0       128    1000000   0.144473686     0.012002486     0.127959959     0.168075458        20         138.4 test_py_str32_to_cpp_u32string_multiple_128[1000000]
TEST:    0      1024    1000000   0.165254003     0.011043742     0.152708750     0.185491626        20         121.0 test_py_str32_to_cpp_u32string_multiple_1024[1000000]
TEST:    0      8192    1000000   0.853880155     0.014881503     0.822144209     0.878523792        20          23.4 test_py_str32_to_cpp_u32string_multiple_8192[1000000]
TEST:    0     65536    1000000  10.891868471     0.187687075    10.764805500    11.638142875        20           1.8 test_py_str32_to_cpp_u32string_multiple_65536[1000000]
#
# NOTES:
# - This is OK, it calls std::u32string ret((const char32_t *)PyUnicode_4BYTE_DATA(op), PyUnicode_GET_LENGTH(op));
